"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Export = () => {
    const drawPic = (context, url, quality) => {
        let x = quality[0];
        let y = quality[1];
        let width = quality[2];
        let height = quality[3];
        wx.getImageInfo({
            src: url,
            success: function (res) {
                context.drawImage(res.path, x, y, width, height);
                context.draw();
            },
            fail: function (res) {
                console.log(res.errMsg);
            }
        });
    };
    const drawText = (context, text, quality) => {
        let x = quality[0];
        let y = quality[1];
        let width = quality[2];
        context.setFontSize(30);
        context.fillText(text, x, y, width);
    };
    const context = wx.createCanvasContext('bottleImg');
    const bottleUrl = "cloud://dxzsbottle-iu8cx.6478-dxzsbottle-iu8cx-1301327315/bottle.png";
    let bottlePath;
    wx.cloud.downloadFile({
        fileID: "cloud://dxzsbottle-iu8cx.6478-dxzsbottle-iu8cx-1301327315/bottle.png",
        success: res => {
            console.log("aaaaaaa" + res.tempFilePath);
            bottlePath = res.tempFilePath;
        },
        fail: res => {
            console.log(res.errMsg);
        }
    });
    const picUrl = "cloud://dxzsbottle-iu8cx.6478-dxzsbottle-iu8cx-1301327315/figs/2.png";
    const bottleHeight = 310;
    const bottleWidth = 200;
    const titleHeight = 300;
    const picWidth = 180;
    context.rect(0, 0, 1300, 4000);
    context.setFillStyle("white");
    context.fill();
    context.draw();
    context.setFillStyle("black");
    for (let y = 1; y <= 6; ++y) {
        for (let x = 1; x <= 5; ++x) {
            drawPic(context, bottlePath, [50 * x + bottleWidth * (x - 1), (bottleHeight + 100) * (y - 1) + titleHeight, bottleWidth, bottleHeight]);
            drawPic(context, picUrl, [50 * x + bottleWidth * (x - 1) + 5, (bottleHeight + 100) * (y - 1) + titleHeight + 100, picWidth, picWidth]);
            drawText(context, "有四个字", [50 * x + bottleWidth * (x - 1) + 40, (bottleHeight + 50) * y + 50 * (y - 1) + titleHeight, 150]);
        }
    }
    context.draw(true, function () {
        setTimeout(function () {
            wx.canvasToTempFilePath({
                canvasId: "bottleImg",
                quality: 1,
                success(res) {
                    wx.saveImageToPhotosAlbum({
                        filePath: res.tempFilePath,
                        success() {
                            console.log("成功保存");
                        },
                        fail(res) {
                            console.log(res.errMsg);
                        }
                    });
                }
            });
        }, 1000);
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZXhwb3J0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQWEsUUFBQSxNQUFNLEdBQUMsR0FBUyxFQUFFO0lBQzdCLE1BQU0sT0FBTyxHQUFHLENBQUMsT0FBd0MsRUFBRSxHQUFXLEVBQUUsT0FBaUIsRUFBUSxFQUFFO1FBQ2pHLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUNsQixJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDbEIsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FBQ3RCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN2QixFQUFFLENBQUMsWUFBWSxDQUFDO1lBQ2QsR0FBRyxFQUFFLEdBQUc7WUFDUixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNwQixPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUE7Z0JBQ2hELE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQTtZQUNoQixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDekIsQ0FBQztTQUNGLENBQUMsQ0FBQTtJQUNKLENBQUMsQ0FBQTtJQUNELE1BQU0sUUFBUSxHQUFHLENBQUMsT0FBd0MsRUFBRSxJQUFZLEVBQUUsT0FBaUIsRUFBUSxFQUFFO1FBQ25HLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUNsQixJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFDbEIsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO1FB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LFdBQVc7Z0JBQ3JCLE9BQU8sRUFBRSxDQUFDO2dCQUNWLE9BQU8sQ0FBQyxHQUFHO29CQUNULEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzt3QkFDeEIsUUFBUSxFQUFFLEdBQUcsQ0FBQyxZQUFZO3dCQUMxQixPQUFPOzRCQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7d0JBQ3JCLENBQUM7d0JBQ0QsSUFBSSxDQUFDLEdBQUc7NEJBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7d0JBQ3pCLENBQUM7cUJBQ0YsQ0FBQyxDQUFBO2dCQUNKLENBQUM7YUFDRixDQUFDLENBQUE7UUFDSixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDUixDQUFDLENBQUMsQ0FBQTtBQUNOLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBFeHBvcnQ9KCk6IHZvaWQgPT57XHJcbiAgY29uc3QgZHJhd1BpYyA9IChjb250ZXh0OiBXZWNoYXRNaW5pcHJvZ3JhbS5DYW52YXNDb250ZXh0LCB1cmw6IHN0cmluZywgcXVhbGl0eTogbnVtYmVyW10pOiB2b2lkID0+e1xyXG4gICAgbGV0IHggPSBxdWFsaXR5WzBdXHJcbiAgICBsZXQgeSA9IHF1YWxpdHlbMV1cclxuICAgIGxldCB3aWR0aCA9IHF1YWxpdHlbMl1cclxuICAgIGxldCBoZWlnaHQgPSBxdWFsaXR5WzNdXHJcbiAgICB3eC5nZXRJbWFnZUluZm8oe1xyXG4gICAgICBzcmM6IHVybCxcclxuICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgIGNvbnRleHQuZHJhd0ltYWdlKHJlcy5wYXRoLCB4LCB5LCB3aWR0aCwgaGVpZ2h0KVxyXG4gICAgICAgIGNvbnRleHQuZHJhdygpXHJcbiAgICAgIH0sXHJcbiAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhyZXMuZXJyTXNnKVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIH1cclxuICBjb25zdCBkcmF3VGV4dCA9IChjb250ZXh0OiBXZWNoYXRNaW5pcHJvZ3JhbS5DYW52YXNDb250ZXh0LCB0ZXh0OiBzdHJpbmcsIHF1YWxpdHk6IG51bWJlcltdKTogdm9pZCA9PntcclxuICAgIGxldCB4ID0gcXVhbGl0eVswXVxyXG4gICAgbGV0IHkgPSBxdWFsaXR5WzFdXHJcbiAgICBsZXQgd2lkdGggPSBxdWFsaXR5WzJdXHJcbiAgICBjb250ZXh0LnNldEZvbnRTaXplKDMwKVxyXG4gICAgY29udGV4dC5maWxsVGV4dCh0ZXh0LCB4LCB5LCB3aWR0aClcclxuICB9XHJcbiAgY29uc3QgY29udGV4dCA9IHd4LmNyZWF0ZUNhbnZhc0NvbnRleHQoJ2JvdHRsZUltZycpXHJcbiAgY29uc3QgYm90dGxlVXJsID0gXCJjbG91ZDovL2R4enNib3R0bGUtaXU4Y3guNjQ3OC1keHpzYm90dGxlLWl1OGN4LTEzMDEzMjczMTUvYm90dGxlLnBuZ1wiXHJcbiAgXHJcbiAgbGV0IGJvdHRsZVBhdGg6IHN0cmluZ1xyXG4gIHd4LmNsb3VkLmRvd25sb2FkRmlsZSh7XHJcbiAgICBmaWxlSUQ6IFwiY2xvdWQ6Ly9keHpzYm90dGxlLWl1OGN4LjY0NzgtZHh6c2JvdHRsZS1pdThjeC0xMzAxMzI3MzE1L2JvdHRsZS5wbmdcIixcclxuICAgIHN1Y2Nlc3M6IHJlcyA9PntcclxuICAgICAgY29uc29sZS5sb2coXCJhYWFhYWFhXCIrcmVzLnRlbXBGaWxlUGF0aClcclxuICAgICAgYm90dGxlUGF0aCA9IHJlcy50ZW1wRmlsZVBhdGggICAgICBcclxuICAgIH0sXHJcbiAgICBmYWlsOiByZXMgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhyZXMuZXJyTXNnKVxyXG4gICAgfVxyXG4gIH0pXHJcblxyXG4gIGNvbnN0IHBpY1VybCA9IFwiY2xvdWQ6Ly9keHpzYm90dGxlLWl1OGN4LjY0NzgtZHh6c2JvdHRsZS1pdThjeC0xMzAxMzI3MzE1L2ZpZ3MvMi5wbmdcIlxyXG4gIGNvbnN0IGJvdHRsZUhlaWdodCA9IDMxMFxyXG4gIGNvbnN0IGJvdHRsZVdpZHRoID0gMjAwXHJcbiAgY29uc3QgdGl0bGVIZWlnaHQgPSAzMDBcclxuICBjb25zdCBwaWNXaWR0aCA9IDE4MFxyXG4gIC8vd3guY2xvdWQuaW5pdCgpXHJcblxyXG4gIGNvbnRleHQucmVjdCgwLCAwLCAxMzAwLCA0MDAwKVxyXG4gIGNvbnRleHQuc2V0RmlsbFN0eWxlKFwid2hpdGVcIilcclxuICBjb250ZXh0LmZpbGwoKVxyXG4gIGNvbnRleHQuZHJhdygpXHJcbiAgY29udGV4dC5zZXRGaWxsU3R5bGUoXCJibGFja1wiKVxyXG4gIFxyXG4gIGZvcihsZXQgeSA9IDE7IHkgPD0gNjsgKyt5KXtcclxuICAgIGZvciAobGV0IHggPSAxOyB4IDw9IDU7ICsreCkge1xyXG4gICAgICAvL3RvZG8g5qCH6aKYXHJcbiAgICAgIC8v55S755O25a2QXHJcbiAgICAgIGRyYXdQaWMoY29udGV4dCwgYm90dGxlUGF0aCwgWzUwKngrYm90dGxlV2lkdGgqKHgtMSksIChib3R0bGVIZWlnaHQrMTAwKSooeS0xKSt0aXRsZUhlaWdodCwgYm90dGxlV2lkdGgsIGJvdHRsZUhlaWdodF0pXHJcbiAgICAgIGRyYXdQaWMoY29udGV4dCwgcGljVXJsLCBbNTAqeCtib3R0bGVXaWR0aCooeC0xKSs1LCAoYm90dGxlSGVpZ2h0KzEwMCkqKHktMSkrdGl0bGVIZWlnaHQrMTAwLCBwaWNXaWR0aCwgcGljV2lkdGhdKVxyXG4gICAgICAvL+eTtuWtkOS4i+eahOWtl1xyXG4gICAgICBkcmF3VGV4dChjb250ZXh0LCBcIuacieWbm+S4quWtl1wiLCBbNTAqeCtib3R0bGVXaWR0aCooeC0xKSs0MCwgKGJvdHRsZUhlaWdodCs1MCkqeSs1MCooeS0xKSt0aXRsZUhlaWdodCwgMTUwXSlcclxuICAgIH1cclxuICB9XHJcbiAgLy/kv53lrZhcclxuICBjb250ZXh0LmRyYXcodHJ1ZSwgZnVuY3Rpb24oKXtcclxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcclxuICAgICAgd3guY2FudmFzVG9UZW1wRmlsZVBhdGgoe1xyXG4gICAgICAgIGNhbnZhc0lkOiBcImJvdHRsZUltZ1wiLFxyXG4gICAgICAgIHF1YWxpdHk6IDEsXHJcbiAgICAgICAgc3VjY2VzcyhyZXMpIHtcclxuICAgICAgICAgIHd4LnNhdmVJbWFnZVRvUGhvdG9zQWxidW0oe1xyXG4gICAgICAgICAgICBmaWxlUGF0aDogcmVzLnRlbXBGaWxlUGF0aCxcclxuICAgICAgICAgICAgc3VjY2VzcygpIHtcclxuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaIkOWKn+S/neWtmFwiKVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBmYWlsKHJlcykge1xyXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcy5lcnJNc2cpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgfSwgMTAwMClcclxuICAgIH0pXHJcbn0iXX0=